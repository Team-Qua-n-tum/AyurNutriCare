import{I as V}from"./iobuffer-BmLRrqXH.js";import{I as x,i as X}from"./pako-n3Pgozwg.js";const $=[];for(let n=0;n<256;n++){let t=n;for(let e=0;e<8;e++)t&1?t=3988292384^t>>>1:t=t>>>1;$[n]=t}const T=4294967295;function q(n,t,e){let s=n;for(let a=0;a<e;a++)s=$[(s^t[a])&255]^s>>>8;return s}function j(n,t){return(q(T,n,t)^T)>>>0}function D(n,t,e){const s=n.readUint32(),a=j(new Uint8Array(n.buffer,n.byteOffset+n.offset-t-4,t),t);if(a!==s)throw new Error(`CRC mismatch for chunk ${e}. Expected ${s}, found ${a}`)}function F(n,t,e){for(let s=0;s<e;s++)t[s]=n[s]}function P(n,t,e,s){let a=0;for(;a<s;a++)t[a]=n[a];for(;a<e;a++)t[a]=n[a]+t[a-s]&255}function K(n,t,e,s){let a=0;if(e.length===0)for(;a<s;a++)t[a]=n[a];else for(;a<s;a++)t[a]=n[a]+e[a]&255}function H(n,t,e,s,a){let i=0;if(e.length===0){for(;i<a;i++)t[i]=n[i];for(;i<s;i++)t[i]=n[i]+(t[i-a]>>1)&255}else{for(;i<a;i++)t[i]=n[i]+(e[i]>>1)&255;for(;i<s;i++)t[i]=n[i]+(t[i-a]+e[i]>>1)&255}}function W(n,t,e,s,a){let i=0;if(e.length===0){for(;i<a;i++)t[i]=n[i];for(;i<s;i++)t[i]=n[i]+t[i-a]&255}else{for(;i<a;i++)t[i]=n[i]+e[i]&255;for(;i<s;i++)t[i]=n[i]+v(t[i-a],e[i],e[i-a])&255}}function v(n,t,e){const s=n+t-e,a=Math.abs(s-n),i=Math.abs(s-t),o=Math.abs(s-e);return a<=i&&a<=o?n:i<=o?t:e}function z(n,t,e,s,a,i){switch(n){case 0:F(t,e,a);break;case 1:P(t,e,a,i);break;case 2:K(t,e,s,a);break;case 3:H(t,e,s,a,i);break;case 4:W(t,e,s,a,i);break;default:throw new Error(`Unsupported filter: ${n}`)}}const J=new Uint16Array([255]),Q=new Uint8Array(J.buffer),Z=Q[0]===255;function tt(n){const{data:t,width:e,height:s,channels:a,depth:i}=n,o=[{x:0,y:0,xStep:8,yStep:8},{x:4,y:0,xStep:8,yStep:8},{x:0,y:4,xStep:4,yStep:8},{x:2,y:0,xStep:4,yStep:4},{x:0,y:2,xStep:2,yStep:4},{x:1,y:0,xStep:2,yStep:2},{x:0,y:1,xStep:1,yStep:2}],r=Math.ceil(i/8)*a,f=new Uint8Array(s*e*r);let c=0;for(let d=0;d<7;d++){const h=o[d],p=Math.ceil((e-h.x)/h.xStep),_=Math.ceil((s-h.y)/h.yStep);if(p<=0||_<=0)continue;const u=p*r,N=new Uint8Array(u);for(let E=0;E<_;E++){const B=t[c++],L=t.subarray(c,c+u);c+=u;const y=new Uint8Array(u);z(B,L,y,N,u,r),N.set(y);for(let g=0;g<p;g++){const b=h.x+g*h.xStep,C=h.y+E*h.yStep;if(!(b>=e||C>=s))for(let w=0;w<r;w++)f[(C*e+b)*r+w]=y[g*r+w]}}}if(i===16){const d=new Uint16Array(f.buffer);if(Z)for(let h=0;h<d.length;h++)d[h]=et(d[h]);return d}else return f}function et(n){return(n&255)<<8|n>>8&255}const st=new Uint16Array([255]),nt=new Uint8Array(st.buffer),it=nt[0]===255,at=new Uint8Array(0);function R(n){const{data:t,width:e,height:s,channels:a,depth:i}=n,o=Math.ceil(i/8)*a,r=Math.ceil(i/8*a*e),f=new Uint8Array(s*r);let c=at,d=0,h,p;for(let _=0;_<s;_++){switch(h=t.subarray(d+1,d+1+r),p=f.subarray(_*r,(_+1)*r),t[d]){case 0:F(h,p,r);break;case 1:P(h,p,r,o);break;case 2:K(h,p,c,r);break;case 3:H(h,p,c,r,o);break;case 4:W(h,p,c,r,o);break;default:throw new Error(`Unsupported filter: ${t[d]}`)}c=p,d+=r+1}if(i===16){const _=new Uint16Array(f.buffer);if(it)for(let u=0;u<_.length;u++)_[u]=rt(_[u]);return _}else return f}function rt(n){return(n&255)<<8|n>>8&255}const U=Uint8Array.of(137,80,78,71,13,10,26,10);function S(n){if(!ht(n.readBytes(U.length)))throw new Error("wrong PNG signature")}function ht(n){if(n.length<U.length)return!1;for(let t=0;t<U.length;t++)if(n[t]!==U[t])return!1;return!0}const ot="tEXt",ct=0,G=new TextDecoder("latin1");function dt(n){if(pt(n),n.length===0||n.length>79)throw new Error("keyword length must be between 1 and 79")}const ft=/^[\u0000-\u00FF]*$/;function pt(n){if(!ft.test(n))throw new Error("invalid latin1 text")}function lt(n,t,e){const s=Y(t);n[s]=_t(t,e-s.length-1)}function Y(n){for(n.mark();n.readByte()!==ct;);const t=n.offset;n.reset();const e=G.decode(n.readBytes(t-n.offset-1));return n.skip(1),dt(e),e}function _t(n,t){return G.decode(n.readBytes(t))}const l={UNKNOWN:-1,GREYSCALE:0,TRUECOLOUR:2,INDEXED_COLOUR:3,GREYSCALE_ALPHA:4,TRUECOLOUR_ALPHA:6},O={UNKNOWN:-1,DEFLATE:0},I={UNKNOWN:-1,ADAPTIVE:0},k={UNKNOWN:-1,NO_INTERLACE:0,ADAM7:1},m={NONE:0,BACKGROUND:1,PREVIOUS:2},A={SOURCE:0,OVER:1};class ut extends V{_checkCrc;_inflator;_png;_apng;_end;_hasPalette;_palette;_hasTransparency;_transparency;_compressionMethod;_filterMethod;_interlaceMethod;_colorType;_isAnimated;_numberOfFrames;_numberOfPlays;_frames;_writingDataChunks;constructor(t,e={}){super(t);const{checkCrc:s=!1}=e;this._checkCrc=s,this._inflator=new x,this._png={width:-1,height:-1,channels:-1,data:new Uint8Array(0),depth:1,text:{}},this._apng={width:-1,height:-1,channels:-1,depth:1,numberOfFrames:1,numberOfPlays:0,text:{},frames:[]},this._end=!1,this._hasPalette=!1,this._palette=[],this._hasTransparency=!1,this._transparency=new Uint16Array(0),this._compressionMethod=O.UNKNOWN,this._filterMethod=I.UNKNOWN,this._interlaceMethod=k.UNKNOWN,this._colorType=l.UNKNOWN,this._isAnimated=!1,this._numberOfFrames=1,this._numberOfPlays=0,this._frames=[],this._writingDataChunks=!1,this.setBigEndian()}decode(){for(S(this);!this._end;){const t=this.readUint32(),e=this.readChars(4);this.decodeChunk(t,e)}return this.decodeImage(),this._png}decodeApng(){for(S(this);!this._end;){const t=this.readUint32(),e=this.readChars(4);this.decodeApngChunk(t,e)}return this.decodeApngImage(),this._apng}decodeChunk(t,e){const s=this.offset;switch(e){case"IHDR":this.decodeIHDR();break;case"PLTE":this.decodePLTE(t);break;case"IDAT":this.decodeIDAT(t);break;case"IEND":this._end=!0;break;case"tRNS":this.decodetRNS(t);break;case"iCCP":this.decodeiCCP(t);break;case ot:lt(this._png.text,this,t);break;case"pHYs":this.decodepHYs();break;default:this.skip(t);break}if(this.offset-s!==t)throw new Error(`Length mismatch while decoding chunk ${e}`);this._checkCrc?D(this,t+4,e):this.skip(4)}decodeApngChunk(t,e){const s=this.offset;switch(e!=="fdAT"&&e!=="IDAT"&&this._writingDataChunks&&this.pushDataToFrame(),e){case"acTL":this.decodeACTL();break;case"fcTL":this.decodeFCTL();break;case"fdAT":this.decodeFDAT(t);break;default:this.decodeChunk(t,e),this.offset=s+t;break}if(this.offset-s!==t)throw new Error(`Length mismatch while decoding chunk ${e}`);this._checkCrc?D(this,t+4,e):this.skip(4)}decodeIHDR(){const t=this._png;t.width=this.readUint32(),t.height=this.readUint32(),t.depth=gt(this.readUint8());const e=this.readUint8();this._colorType=e;let s;switch(e){case l.GREYSCALE:s=1;break;case l.TRUECOLOUR:s=3;break;case l.INDEXED_COLOUR:s=1;break;case l.GREYSCALE_ALPHA:s=2;break;case l.TRUECOLOUR_ALPHA:s=4;break;case l.UNKNOWN:default:throw new Error(`Unknown color type: ${e}`)}if(this._png.channels=s,this._compressionMethod=this.readUint8(),this._compressionMethod!==O.DEFLATE)throw new Error(`Unsupported compression method: ${this._compressionMethod}`);this._filterMethod=this.readUint8(),this._interlaceMethod=this.readUint8()}decodeACTL(){this._numberOfFrames=this.readUint32(),this._numberOfPlays=this.readUint32(),this._isAnimated=!0}decodeFCTL(){const t={sequenceNumber:this.readUint32(),width:this.readUint32(),height:this.readUint32(),xOffset:this.readUint32(),yOffset:this.readUint32(),delayNumber:this.readUint16(),delayDenominator:this.readUint16(),disposeOp:this.readUint8(),blendOp:this.readUint8(),data:new Uint8Array(0)};this._frames.push(t)}decodePLTE(t){if(t%3!==0)throw new RangeError(`PLTE field length must be a multiple of 3. Got ${t}`);const e=t/3;this._hasPalette=!0;const s=[];this._palette=s;for(let a=0;a<e;a++)s.push([this.readUint8(),this.readUint8(),this.readUint8()])}decodeIDAT(t){this._writingDataChunks=!0;const e=t,s=this.offset+this.byteOffset;if(this._inflator.push(new Uint8Array(this.buffer,s,e)),this._inflator.err)throw new Error(`Error while decompressing the data: ${this._inflator.err}`);this.skip(t)}decodeFDAT(t){this._writingDataChunks=!0;let e=t,s=this.offset+this.byteOffset;if(s+=4,e-=4,this._inflator.push(new Uint8Array(this.buffer,s,e)),this._inflator.err)throw new Error(`Error while decompressing the data: ${this._inflator.err}`);this.skip(t)}decodetRNS(t){switch(this._colorType){case l.GREYSCALE:case l.TRUECOLOUR:{if(t%2!==0)throw new RangeError(`tRNS chunk length must be a multiple of 2. Got ${t}`);if(t/2>this._png.width*this._png.height)throw new Error(`tRNS chunk contains more alpha values than there are pixels (${t/2} vs ${this._png.width*this._png.height})`);this._hasTransparency=!0,this._transparency=new Uint16Array(t/2);for(let e=0;e<t/2;e++)this._transparency[e]=this.readUint16();break}case l.INDEXED_COLOUR:{if(t>this._palette.length)throw new Error(`tRNS chunk contains more alpha values than there are palette colors (${t} vs ${this._palette.length})`);let e=0;for(;e<t;e++){const s=this.readByte();this._palette[e].push(s)}for(;e<this._palette.length;e++)this._palette[e].push(255);break}case l.UNKNOWN:case l.GREYSCALE_ALPHA:case l.TRUECOLOUR_ALPHA:default:throw new Error(`tRNS chunk is not supported for color type ${this._colorType}`)}}decodeiCCP(t){const e=Y(this),s=this.readUint8();if(s!==O.DEFLATE)throw new Error(`Unsupported iCCP compression method: ${s}`);const a=this.readBytes(t-e.length-2);this._png.iccEmbeddedProfile={name:e,profile:X(a)}}decodepHYs(){const t=this.readUint32(),e=this.readUint32(),s=this.readByte();this._png.resolution={x:t,y:e,unit:s}}decodeApngImage(){this._apng.width=this._png.width,this._apng.height=this._png.height,this._apng.channels=this._png.channels,this._apng.depth=this._png.depth,this._apng.numberOfFrames=this._numberOfFrames,this._apng.numberOfPlays=this._numberOfPlays,this._apng.text=this._png.text,this._apng.resolution=this._png.resolution;for(let t=0;t<this._numberOfFrames;t++){const e={sequenceNumber:this._frames[t].sequenceNumber,delayNumber:this._frames[t].delayNumber,delayDenominator:this._frames[t].delayDenominator,data:this._apng.depth===8?new Uint8Array(this._apng.width*this._apng.height*this._apng.channels):new Uint16Array(this._apng.width*this._apng.height*this._apng.channels)},s=this._frames.at(t);if(s){if(s.data=R({data:s.data,width:s.width,height:s.height,channels:this._apng.channels,depth:this._apng.depth}),this._hasPalette&&(this._apng.palette=this._palette),this._hasTransparency&&(this._apng.transparency=this._transparency),t===0||s.xOffset===0&&s.yOffset===0&&s.width===this._png.width&&s.height===this._png.height)e.data=s.data;else{const a=this._apng.frames.at(t-1);this.disposeFrame(s,a,e),this.addFrameDataToCanvas(e,s)}this._apng.frames.push(e)}}return this._apng}disposeFrame(t,e,s){switch(t.disposeOp){case m.NONE:break;case m.BACKGROUND:for(let a=0;a<this._png.height;a++)for(let i=0;i<this._png.width;i++){const o=(a*t.width+i)*this._png.channels;for(let r=0;r<this._png.channels;r++)s.data[o+r]=0}break;case m.PREVIOUS:s.data.set(e.data);break;default:throw new Error("Unknown disposeOp")}}addFrameDataToCanvas(t,e){const s=1<<this._png.depth,a=(i,o)=>{const r=((i+e.yOffset)*this._png.width+e.xOffset+o)*this._png.channels,f=(i*e.width+o)*this._png.channels;return{index:r,frameIndex:f}};switch(e.blendOp){case A.SOURCE:for(let i=0;i<e.height;i++)for(let o=0;o<e.width;o++){const{index:r,frameIndex:f}=a(i,o);for(let c=0;c<this._png.channels;c++)t.data[r+c]=e.data[f+c]}break;case A.OVER:for(let i=0;i<e.height;i++)for(let o=0;o<e.width;o++){const{index:r,frameIndex:f}=a(i,o);for(let c=0;c<this._png.channels;c++){const d=e.data[f+this._png.channels-1]/s,h=c%(this._png.channels-1)===0?1:e.data[f+c],p=Math.floor(d*h+(1-d)*t.data[r+c]);t.data[r+c]+=p}}break;default:throw new Error("Unknown blendOp")}}decodeImage(){if(this._inflator.err)throw new Error(`Error while decompressing the data: ${this._inflator.err}`);const t=this._isAnimated?(this._frames?.at(0)).data:this._inflator.result;if(this._filterMethod!==I.ADAPTIVE)throw new Error(`Filter method ${this._filterMethod} not supported`);if(this._interlaceMethod===k.NO_INTERLACE)this._png.data=R({data:t,width:this._png.width,height:this._png.height,channels:this._png.channels,depth:this._png.depth});else if(this._interlaceMethod===k.ADAM7)this._png.data=tt({data:t,width:this._png.width,height:this._png.height,channels:this._png.channels,depth:this._png.depth});else throw new Error(`Interlace method ${this._interlaceMethod} not supported`);this._hasPalette&&(this._png.palette=this._palette),this._hasTransparency&&(this._png.transparency=this._transparency)}pushDataToFrame(){const t=this._inflator.result,e=this._frames.at(-1);e?e.data=t:this._frames.push({sequenceNumber:0,width:this._png.width,height:this._png.height,xOffset:0,yOffset:0,delayNumber:0,delayDenominator:0,disposeOp:m.NONE,blendOp:A.SOURCE,data:t}),this._inflator=new x,this._writingDataChunks=!1}}function gt(n){if(n!==1&&n!==2&&n!==4&&n!==8&&n!==16)throw new Error(`invalid bit depth: ${n}`);return n}var M;(function(n){n[n.UNKNOWN=0]="UNKNOWN",n[n.METRE=1]="METRE"})(M||(M={}));function Ut(n,t){return new ut(n,t).decode()}export{Ut as d};
